<div otvl-web>
type: sf-img
src: /assets/images/cabri-share-conf/Wild_Baby_Chamois_by_Giles_Laurent.jpg
alt: Article image
title: Wild Baby Chamois Riederalp Photo by Giles Laurent
class_: v-img-header
credit:
  text: Illustration above credit
  href: https://commons.wikimedia.org/wiki/File:013_Wild_Baby_Chamois_Riederalp_Photo_by_Giles_Laurent.jpg
</div>

# Using Cabri to share data with confidence

<div otvl-web>
type: sf-page-dates
</div>

Cabri is a free and open source tool designed specifically to store data on various media,
synchronize data sets one with the other,
between different places, with the people you want.

It is both fast and secure, providing confidentiality in untrusted environments.

It is mainly available as a command-line tool, but also provides an API (Golang and REST). A GUI is under development.
Cabri is currently in beta release.

This short article presents the main types of usage.

## Backup files on external drive

Cabri manages what it calls Data Storage Systems (DSS). A DSS is a collection of data files along with their properties:
name and related location, size, last modification time, checksum and access rights.
Cabri also can deal with files and subdirectories under a local directory as a DSS.
As Cabri provides a synchronization tool, local directory's content can be backed up
on a DSS located on an external drive to be restored whenever needed.

_Illustration here._

Most operating systems for sure already do it very well. What Cabri adds in that case is:

- managing data files checksums to detect possible data corruption
- incremental storage: successive synchronizations don't erase previous content but only add new content
or hide removed content, anyway the full history is available until parts of it are explicitly deleted
- deduplication: same content copied several times in a DSS is only stored once
- operating system neutrality: if the external drive partitioning is portable, FAT for instance,
then the Cabri DSS can be restored on any OS where Cabri is available

## Backup files on Cloud Storage

Cabri also manages DSS that store their data using Cloud Storage:
any Cloud Storage compatible with Amazon S3 can be used, mainly Openstack Swift containers
and Amazon aws S3 buckets.
Extending the previous example, a local directory's content can be backed up in the cloud and restored from it.

_Illustration here._

You will benefit from the same services as with an external drive DSS: checksums, incremental storage and deduplication.
But the first benefit is that your backed up data's availability is much better,
because it is physically stored elsewhere, not talking about Cloud services themselves.

## Share files between users or locations

Is the backed up data available from anywhere?
This is almost true but the DSS must be declared locally:
this local configuration is needed to describe how to connect to the Cloud Storage service,
and it also stores an index of the DSS, which is required to provide fast access to its content.

## Encrypting sensitive data

Local data or data stored on external drive may be at risk if the device is lost or stolen.
Data stored with Cloud Services may be at risk if their operators get unauthorized access to it.
For these reasons and many others, sensitive data must be encrypted.

Many operating systems enable encrypting data, generally relying on full-disk encryption:
you can only read a disk's content if you are authenticated or provide a correct passphrase.

Cabri also enables data encryption. As Cabri is a Data Storage System, Cabri encryption works at the data level.
To be explicit, it must be said that the content's metadata is encrypted too.

_Illustration here._

## Public key encryption

Another encryption feature is that a Cabri DSS can be shared by several users,
each owning his or her personal secret to decrypt the data.
Cabri uses public-key encryption: data producers encrypt data with other users' public keys,
data consumers owning the corresponding private keys can decrypt the data.
Thus different data may be visible by different sets of users.

_Illustration here._

## Conclusion

From personal data backup to data science storage, through multi-user data sharing in the cloud,
Cabri supports many data storage use cases, some of them you may want to implement.
You can evaluate if it is relevant in your case by getting started using it while reading its documentation.

## References

- [Cabri project and documentation](https://github.com/t-beigbeder/otvl_cabri)

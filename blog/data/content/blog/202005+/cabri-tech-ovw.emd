<div otvl-web>
type: sf-img
src: /assets/images/cabri-tech-ovw/Wild_Baby_Alpine_Chamois_Creux_by_Giles_Laurent.jpg
alt: Article image
title: Wild baby alpine chamois and Swiss alps at Creux du van with sunset colors and snow Photo by Giles Laurent
class_: v-img-header
credit:
  text: Illustration above credit
  href: https://commons.wikimedia.org/wiki/File:006_Wild_Baby_Alpine_Chamois_Creux_du_Van_and_Swiss_Alps_Sunset_colors_Photo_by_Giles_Laurent.jpg
</div>

# Cabri technical overview

<div otvl-web>
type: sf-page-dates
</div>

[Cabri](https://github.com/t-beigbeder/otvl_cabri)
enables fast and secure data synchronization between people, medias and places.

While a [previous article](/blog/cabri-share-conf)
presented its main features from a user's perspective,
this one provides some information on its implementation
to better understand how efficiency and security are supported.

## Cabri is fast

### Parallel processing

### Flow processing

### Indexes

## Cabri is secured

### End-to-end data-level encryption

### Is remote access secure?

### Are indexes secure?

### Distributed meta-data

## Conclusion

Confidentiality of the data processed and stored in unsecured environments
was the first concern when designing the Cabri solution.
I hope this article made you confident with it,
anyway this is open-source, you can verify it!

The cost of security is not necessarily the loss of performance:
for sure encryption and decryption require larger computing power
than bare data transfer, anyway the solution remains as fast as possible
by using parallel processing.

Finally, the data stored on local drives or using cloud storage may be easily
scanned and reindexed after any kind of system crash.
In the case of encrypted data this is obviously only under the condition
you manage the encryption secret keys securely.

## References

- [Cabri project source-code and documentation](https://github.com/t-beigbeder/otvl_cabri)
- [Age](https://age-encryption.org/) - A simple, modern and secure encryption tool
